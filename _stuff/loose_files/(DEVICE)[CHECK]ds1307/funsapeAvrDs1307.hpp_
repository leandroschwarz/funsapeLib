/* =============================================================================
 * Project:		FunSAPE++ AVR Library
 * File name:	funsapeAvrDs1307.hpp
 * Module:		DS1307 RTC Controller class
 * Author(s):	__AUTHORS_MACRO_TO_BE_CHANGED__
 * Build:		__BUILD_MACRO_TO_BE_CHANGED__
 * Date:		__DATE_MACRO_TO_BE_CHANGED__
 * ========================================================================== */

// =============================================================================
// Preamble
// =============================================================================

// -----------------------------------------------------------------------------
// File build ------------------------------------------------------------------

#ifndef __FUNSAPE_AVR_DS1307_HPP
#define __FUNSAPE_AVR_DS1307_HPP				__BUILD_MACRO_TO_BE_CHANGED__

// -----------------------------------------------------------------------------
// System file dependencies ----------------------------------------------------

#include "..\funsapeAvrGlobalDefines.hpp"
#if __FUNSAPE_AVR_PROJECT_CONFIG_HPP != __BUILD_MACRO_TO_BE_CHANGED__
#	error	Project configurations file (funsapeAvrGlobalDefines) must be build __BUILD_MACRO_TO_BE_CHANGED__.
#endif

// =============================================================================
// Constants and Macro-functions
// =============================================================================

// -----------------------------------------------------------------------------
// Undefining previous definitions ---------------------------------------------

// NONE

// -----------------------------------------------------------------------------
// Constant definitions --------------------------------------------------------

#define DS1307_SLAVE_ADDRESS			0x68
#define DS1307_ADDRESS_SECONDS			0x00
#define DS1307_ADDRESS_COUNTING			0x00
#define DS1307_ADDRESS_MINUTES			0x01
#define DS1307_ADDRESS_HOURS			0x02
#define DS1307_ADDRESS_TIME_FORMAT		0x02
#define DS1307_ADDRESS_WEEK_DAY			0x03
#define DS1307_ADDRESS_MONTH_DAY		0x04
#define DS1307_ADDRESS_MONTH			0x05
#define DS1307_ADDRESS_YEAR				0x06
#define DS1307_ADDRESS_CONTROL			0x07
#define DS1307_ADDRESS_RAM				0x08
#define DS1307_I2C_MIN_CLOCK_SPEED		0UL
#define DS1307_I2C_MAX_CLOCK_SPEED		100000UL

// -----------------------------------------------------------------------------
// Macro-functions -------------------------------------------------------------

// NONE

// =============================================================================
// New data types
// =============================================================================

// -----------------------------------------------------------------------------
// Single variables ------------------------------------------------------------

// NONE

// -----------------------------------------------------------------------------
// Enumerations (logic values) -------------------------------------------------

// NONE

// -----------------------------------------------------------------------------
// Enumerations (small and finite lists) ---------------------------------------

enum class TwiMode : uint8_t {
	NONE								= 0,
	MASTER								= 1,
	SLAVE								= 2,
};

// -----------------------------------------------------------------------------
// Enumerations (large or expansible lists) ------------------------------------

// NONE

// -----------------------------------------------------------------------------
// Enumerations (algebraic operated list elements) -----------------------------

// NONE

// -----------------------------------------------------------------------------
// Enumerations (bitwise operated flags) ---------------------------------------

// NONE

// =============================================================================
// New classes
// =============================================================================

// -----------------------------------------------------------------------------
// Abstract classes ------------------------------------------------------------

//NONE

// -----------------------------------------------------------------------------
// Concrete classes ------------------------------------------------------------

class Ds1307
{
	// -------------------------------------------------------------------------
	// New data types
public:
	// NONE

protected:
	// NONE

private:
	// NONE

	// -------------------------------------------------------------------------
	// New data overloading operators ------------------------------------------
public:
	// NONE

protected:
	// NONE

private:
	// NONE

	// -------------------------------------------------------------------------
	// Constructors ------------------------------------------------------------
public:

	Ds1307(void);							// Automatic constructor
// 	~Ds1307(void);						// Automatic destructor

	// -------------------------------------------------------------------------
	// Methods -----------------------------------------------------------------
public:
	// bool initializeMaster(     // Initialize peripheral in master mode
	// 	uint32_t bitRate = TWI0_MIN_BIT_RATE,	// Master SCL frequency
	// 	uint8_t bufferSize = 20				// Internal buffer size
	// );

	// Error getLastError(void);			// Returns last error

	// bool sendData(      // Send data to slave device (explicit device register address)
	// 	uint8_t devAddress,						// Slave device 7-bit address
	// 	IoOperation readWrite,					// I/O operation mode
	// 	uint8_t regAddress,						// Device register address
	// 	uint8_t *msg = NULL,					// Pointer to message (without device register address)
	// 	uint8_t msgSize = 0						// Message size
	// );

	// void interruptHandler(void);		// ... TODO (comments)

	// bool setTimeOut(     // ... TODO (comments)
	// 	uint8_t timeOut							// ... TODO (comments)
	// );

protected:
	// NONE

private:
	// void _turnOff(      // Reset peripheral
	// 	bool kill								// Clear data members
	// );
	// void _disable(void);				// Disables peripheral
	// bool _waitWhileIsBusy(void);		// ... TODO (comments)
	// bool _startTrasmission(void);		// ... TODO (comments)
	// bool _readFromBuffer(    // ... TODO (comments)
	// 	uint8_t *msg,							// ... TODO (comments)
	// 	uint8_t msgSize							// ... TODO (comments)
	// );

	// -------------------------------------------------------------------------
	// Properties --------------------------------------------------------------
public:
	// NONE

protected:
	// NONE

private:
	uint8 hours                 : 5;
	uint8 weekDay               : 3;
	uint8 amPm                  : 1;
	uint8 minutes               : 6;
	uint8 seconds               : 6;
	uint8 year                  : 7;
	uint8 month                 : 4;
	uint8 monthDay              : 5;
	uint8 squareWaveActivation  : 1;
	uint8 squareWaveOffValue    : 1;
	uint8 squareWaveFrequency   : 2;
	uint8 countingHalted        : 1;
	uint8 timeFormat            : 1;












	bool				_initialized					: 1;
	TwiMode				_mode;
	Error				_lastError;
	bool				_lastTransOk					: 1;
	uint8_t				_timeOut;
	twiState_e			_state;
	uint8_t				_bitRateRegister;
	twi0Prescaler_t		_bitRatePrescaler;
	uint8_t				*_bufferData;
	uint8_t				_bufferMaxSize					: 7;
	uint8_t				_bufferIndex					: 7;
	uint8_t				_bufferLength					: 7;
	uint8_t				_tempBytesToSend				: 7;






}; // class Twi0

// NONE

// =============================================================================
// Global variables
// =============================================================================

// -----------------------------------------------------------------------------
// Extern global variables -----------------------------------------------------

// NONE

// -----------------------------------------------------------------------------
// Internal global variables - *INDENT-OFF* ------------------------------------

#if TWI0_EXISTS
	extern Twi0 twi0;
#endif

// *INDENT-ON* 
#endif // __FUNSAPE_AVR_DS1307_HPP
