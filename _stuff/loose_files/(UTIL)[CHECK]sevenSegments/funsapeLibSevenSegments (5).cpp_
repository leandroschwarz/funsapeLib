/* =============================================================================
 * Project:         FunSAPE++ Embedded Library
 * File name:       funsapeLibSevenSegments.hpp
 * Module:          Seven Segments Display Interface for FunSAPE++ Embedded
 *                      Library project
 * Authors:         __AUTHORS_LIST__
 * Build:           __BUILD_NUMBER__
 * Last edition:    __CURRENT_DATE__
 * Purpose:         Seven segments display controller with support to common
 *                  anode and common cathode displays. Special characters dash
 *                  (0xFD), U (0xFE) and display off (0xFF) were also implented
 * ========================================================================== */

#if HAHA

// =============================================================================
// Dependencies
// =============================================================================

#include "funsapeLibSpi.hpp"
#ifndef __FUNSAPE_LIB_SPI_HPP
#   error [funsapeLibSpi.cpp] Error - Header file (funsapeLibSpi.hpp) is missing or corrupted!
#elif __FUNSAPE_LIB_SPI_HPP != __BUILD_NUMBER__
#   error [funsapeLibSpi.cpp] Error - Build mismatch between source (funsapeLibSpi.cpp) and header (funsapeLibSpi.hpp) files!
#endif

/* -----------------------------------------------------------------------------
 * Function:    hex2SevenSegments
 * Purpose:     Seven segments display decoder
 * Arguments:   hexValue        hex number or special character value
 *              displayType     Display type (use enumerations at displayType_t)
 *              point           ON or OFF
 * Returns:     decoded data value
 * -------------------------------------------------------------------------- */

uint8 hex2SevenSegments(uint8 hexValue, displayType_t displayType, bool_t point)
{
    uint8 data = 0;

    switch (hexValue) { // PGFEDCBA
    case 0x00:  data = 0b00111111;  break;
    case 0x01:  data = 0b00000110;  break;
    case 0x02:  data = 0b01011011;  break;
    case 0x03:  data = 0b01001111;  break;
    case 0x04:  data = 0b01100110;  break;
    case 0x05:  data = 0b01101101;  break;
    case 0x06:  data = 0b01111101;  break;
    case 0x07:  data = 0b00000111;  break;
    case 0x08:  data = 0b01111111;  break;
    case 0x09:  data = 0b01101111;  break;
    case 0x0A:  data = 0b01110111;  break;
    case 0x0B:  data = 0b01111100;  break;
    case 0x0C:  data = 0b00111001;  break;
    case 0x0D:  data = 0b01011110;  break;
    case 0x0E:  data = 0b01111001;  break;
    case 0x0F:  data = 0b01110001;  break;
    case DISPLAY_DASH:  data = 0b01000000;  break;  // Dash
    case DISPLAY_U:     data = 0b00111110;  break;  // U
    case DISPLAY_OFF:   data = 0b00000000;  break;  // OFF
    }
    if (point) {
        data |= (1 << 7);
    }
    data = (displayType == DISPLAY_COMMON_CATHODE) ? data : (~data);

    return data;
}

#endif

// =============================================================================
// END OF FILE
// =============================================================================
