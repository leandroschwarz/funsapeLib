/* =============================================================================
 * Project:		FunSAPE++ AVR Library
 * File name:	sevenSegments.hpp
 * Module:		Seven Segments Display cotroller class
 * Author(s):	__AUTHORS_MACRO_TO_BE_CHANGED__
 * Build:		__BUILD_MACRO_TO_BE_CHANGED__
 * Date:		__DATE_MACRO_TO_BE_CHANGED__
 * Purpose:		Seven segments display controller with support to common anode
 *				and common cathode displays. Special characters dash  (0xFD), U
 *				(0xFE) and display off (0xFF) were also implented.
 * ========================================================================== */

// =============================================================================
// File build
// =============================================================================

#ifndef __SEVEN_SEGMENTS_HPP
#define __SEVEN_SEGMENTS_HPP					__BUILD_MACRO_TO_BE_CHANGED__

// =============================================================================
// System file dependencies
// =============================================================================

#include "..\funsapeAvrGlobalDefines.hpp"
#if __FUNSAPE_AVR_PROJECT_CONFIG_HPP != __BUILD_MACRO_TO_BE_CHANGED__
#	error	Project configurations file (funsapeAvrGlobalDefines) must be build __BUILD_MACRO_TO_BE_CHANGED__.
#endif

// =============================================================================
// Constants
// =============================================================================

// -----------------------------------------------------------------------------
// Undefining previous definitions
// -----------------------------------------------------------------------------

// NONE

// -----------------------------------------------------------------------------
// Defining new constants
// -----------------------------------------------------------------------------

#define DISPLAY_DASH	0x3D
#define DISPLAY_U		0x3E
#define DISPLAY_OFF		0x3F

// -----------------------------------------------------------------------------
// Defining macro-functions
// -----------------------------------------------------------------------------

// NONE

// =============================================================================
// New data types
// =============================================================================

// -----------------------------------------------------------------------------
// Single variables
// -----------------------------------------------------------------------------

// NONE

// -----------------------------------------------------------------------------
// Enumerations - Logic values
// -----------------------------------------------------------------------------

typedef enum displayType_t {
	DISPLAY_COMMON_CATHODE	= 0,
	DISPLAY_COMMON_ANODE	= 1
} displayType_t;

// -----------------------------------------------------------------------------
// Enumerations - Finite lists
// -----------------------------------------------------------------------------

// NONE

// -----------------------------------------------------------------------------
// Enumerations - Expansible lists
// -----------------------------------------------------------------------------

// NONE

// -----------------------------------------------------------------------------
// Enumerations - Lists that can be algebraically manipulated
// -----------------------------------------------------------------------------

// NONE

// -----------------------------------------------------------------------------
// Enumerations - Lists that can be manipulated using bitwise operations
// -----------------------------------------------------------------------------

// NONE

// =============================================================================
// Global variable declaration
// =============================================================================

// NONE

// =============================================================================
// Class declaration
// =============================================================================

// -----------------------------------------------------------------------------
// Class SevenSeg - Start
// -----------------------------------------------------------------------------

class SevenSegments
{
	// -------------------------------------------------------------------------
	// New data types
	// -------------------------------------------------------------------------
	// NONE

	// -------------------------------------------------------------------------
	// New data declaration ----------------------------------------------------
private:
	// NONE

	// -------------------------------------------------------------------------
	// New data overloading operators ------------------------------------------
private:
	// NONE

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------
public:

	SevenSegments(displayType_t type = DISPLAY_COMMON_ANODE,
			uint8_t value = DISPLAY_OFF,
			bool point = false);						// Automatic constructor

	// -------------------------------------------------------------------------
	// Public methods
	// -------------------------------------------------------------------------
public:

	void setValue(uint8_t newValue);
	void setPoint(bool newPointState);
	uint8_t getSegments(void);

	// -------------------------------------------------------------------------
	// Private methods
	// -------------------------------------------------------------------------
private:

	// -------------------------------------------------------------------------
	// Protected methods
	// -------------------------------------------------------------------------
protected:

	// -------------------------------------------------------------------------
	// Private properties
	// -------------------------------------------------------------------------
private:

	displayType_t		_type					: 1;
	bool				_pointStatus			: 1;
	uint8_t				_value					: 6;

	// -------------------------------------------------------------------------
	// Protected properties
	// -------------------------------------------------------------------------
protected:

}; // class SevenSegments

// -----------------------------------------------------------------------------
// Class SevenSegments - Class overloading operators
// -----------------------------------------------------------------------------

// NONE

// -----------------------------------------------------------------------------
// Class SevenSegments - Class inline functions definitions
// -----------------------------------------------------------------------------

// NONE

// -----------------------------------------------------------------------------
// Class SevenSegments - End
// -----------------------------------------------------------------------------

// =============================================================================
// General public functions declarations
// =============================================================================

// NONE

// =============================================================================
// General inline functions definitions
// =============================================================================

// NONE

// =============================================================================
// External default objects
// =============================================================================

// NONE

#endif // __SEVEN_SEG_HPP
