/* =============================================================================
 * Project:			FunSAPE++ Embedded Library
 * File name:		funsapeLibGpio.hpp
 * Module:			GPIO Peripheral Interface for FunSAPE++ Embedded Library
 *					project
 * Authors:			__AUTHORS_TO_REPLACE__
 * Build:			__BUILD_TO_REPLACE__
 * Last edition:	__DATE_TO_REPLACE__
 * ========================================================================== */

// =============================================================================
// Include guard
// =============================================================================

#ifndef __FUNSAPE_LIB_GPIO_HPP
#define __FUNSAPE_LIB_GPIO_HPP					__BUILD_TO_REPLACE__

// =============================================================================
// Dependencies
// =============================================================================

// -----------------------------------------------------------------------------
// Global definitions file -----------------------------------------------------

#include "funsapeLibGlobalDefines.hpp"
#ifndef __FUNSAPE_LIB_GLOBAL_DEFINES_HPP
#	error	[funsapeLibGpio.hpp] Error 9 - Global definitions file (funsapeLibGlobalDefines.hpp) is missing or corrupted!
#elif __FUNSAPE_LIB_GLOBAL_DEFINES_HPP != __BUILD_TO_REPLACE__
#	error	[funsapeLibGpio.hpp] Error 10 - Build mismatch between (funsapeLibGpio.hpp) and global definitions file (funsapeLibGlobalDefines.hpp)!
#endif

// -----------------------------------------------------------------------------
// Header files - FunSAPE Library header files ---------------------------------

#include "util/funsapeLibDebug.hpp"
#ifndef __FUNSAPE_LIB_DEBUG_HPP
#	error	[funsapeLibGpio.hpp] Error 1 - Header file (funsapeLibDebug.hpp) is missing or corrupted!
#elif __FUNSAPE_LIB_DEBUG_HPP != __BUILD_TO_REPLACE__
#	error	[funsapeLibGpio.hpp] Error 2 - Build mismatch between (funsapeLibGpio.hpp) and (funsapeLibDebug.hpp) header files!
#endif

// -----------------------------------------------------------------------------
// Low level abstraction layer header files ------------------------------------

// AVR abstration layer
#if defined(_FUNSAPE_PLATFORM_AVR)
#	include "all/allGpio.hpp"
#	ifndef __ALL_GPIO_HPP
#		error	[funsapeLibGpio.hpp] Error 1 - Header file (allGpio.hpp) is missing or corrupted!
#	elif __ALL_GPIO_HPP != __BUILD_TO_REPLACE__
#		error	[funsapeLibGpio.hpp] Error 2 - Build mismatch between (funsapeLibGpio.hpp) and (allGpio.hpp) header files!
#	endif

// ARM STM32 abstration layer
#elif defined(_FUNSAPE_PLATFORM_ARM_STM32)
// #	include ""						// TODO: Include STM32 Low Level Layer

#endif

// =============================================================================
// Undefining previous definitions
// =============================================================================

// NONE

// =============================================================================
// Constant definitions
// =============================================================================

// NONE

// =============================================================================
// Macro-function definitions
// *INDENT-OFF*
// =============================================================================

// NONE

// *INDENT-ON*

// =============================================================================
// New data types
// =============================================================================

#if defined(_FUNSAPE_PLATFORM_ARM_STM32)
enum class PinSpeed {
	SPEED_LOW						= 0,
	SPEED_MEDIUM					= 1,
	SPEED_FAST						= 2,
};
#endif

enum class PinMode {
	INPUT_TRISTATE					= 0,
	INPUT_PULL_UP					= 1,
	OUTPUT							= 2,
};

// =============================================================================
// Extern global variables
// =============================================================================

// NONE

// =============================================================================
// Gpio - Class declaration
// =============================================================================

class Gpio
{
	// -------------------------------------------------------------------------
	// New data types
	// -------------------------------------------------------------------------

public:
#if defined(_FUNSAPE_PLATFORM_AVR)
	typedef enum pinsMask_e : ioPin_t {
		PIN_0							= (1 << 0),
		PIN_1							= (1 << 1),
		PIN_2							= (1 << 2),
		PIN_3							= (1 << 3),
		PIN_4							= (1 << 4),
		PIN_5							= (1 << 5),
		PIN_6							= (1 << 6),
		PIN_7							= (1 << 7),
	} pinsMask_e;
#elif defined(_FUNSAPE_PLATFORM_ARM_STM32)
	typedef enum pinsMask_e : ioPin_t {
		PIN_0							= (1 << 0),
		PIN_1							= (1 << 1),
		PIN_2							= (1 << 2),
		PIN_3							= (1 << 3),
		PIN_4							= (1 << 4),
		PIN_5							= (1 << 5),
		PIN_6							= (1 << 6),
		PIN_7							= (1 << 7),
		PIN_8							= (1 << 8),
		PIN_9							= (1 << 9),
		PIN_10							= (1 << 10),
		PIN_11							= (1 << 11),
		PIN_12							= (1 << 12),
		PIN_13							= (1 << 13),
		PIN_14							= (1 << 14),
		PIN_15							= (1 << 15),
	} pinsMask_e;
#endif

private:
	// NONE

protected:
	// NONE

	// -------------------------------------------------------------------------
	// Operators overloading
	// -------------------------------------------------------------------------

public:
	// NONE

private:
	// NONE

protected:
	// NONE

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

public:
#if defined(_FUNSAPE_PLATFORM_AVR)
	Gpio(allGpioControl_s *instance_p, pinsMask_e pinsMask_p);
#elif defined(_FUNSAPE_PLATFORM_ARM_STM32)
	// TODO: Implement for ARM
	Gpio(void *instance_p, pinsMask_e pinsMask_p);
#endif
	~Gpio(void);

// -------------------------------------------------------------------------
// Methods - Inherited methods
// -------------------------------------------------------------------------

public:
// NONE

protected:
// NONE

// -------------------------------------------------------------------------
// Methods - Class own methods
// -------------------------------------------------------------------------

public:
	bool addPin(pinsMask_e pinsMask_p);
	bool removePin(pinsMask_e pinsMask_p);
	bool setMode(PinMode pinMode_p);

#if defined(_FUNSAPE_PLATFORM_ARM_STM32)
	bool setDriverMode(DriverMode driverMode_p);
	bool setSpeed(PinSpeed pinSpeed_p);
#endif
	void set(void);
	void reset(void);
	void toggle(void);
	ioPin_t read(void);
	void write(ioPin_t value_p);

private:
// NONE

protected:
// NONE

// -------------------------------------------------------------------------
// Properties
// -------------------------------------------------------------------------

public:
// NONE

private:
#if defined(_FUNSAPE_PLATFORM_AVR)
	allGpioControl_s					 *_instance;
#elif defined(_FUNSAPE_PLATFORM_ARM_STM32)
	void								*_instance;
#endif
	bool								_initialized;
	ioPin_t								_pinsMask;
	Error								_lastError;

protected:
// NONE

}; // class Gpio

// =============================================================================
// Gpio - Class overloading operators
// =============================================================================

// NONE

// =============================================================================
// Global variables
// =============================================================================

// -----------------------------------------------------------------------------
// Externally defined global variables -----------------------------------------

// NONE

// -----------------------------------------------------------------------------
// Internally defined global variables -----------------------------------------

// NONE

// =============================================================================
// Gpio - Class inline function definitions
// =============================================================================

// NONE

// =============================================================================
// General public functions declarations
// =============================================================================

// NONE

// =============================================================================
// General inline functions definitions
// =============================================================================

// NONE

// =============================================================================
// External default objects
// =============================================================================

// NONE

#endif // __FUNSAPE_LIB_GPIO_HPP
