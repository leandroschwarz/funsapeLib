
Termos
======

lowerCamelCase			forma de grafia de palavras compostas ou frases em que cada palavra (ou sigla) do meio da frase deve começar com letra maiúscula, sem espaços nem pontuação intermediária, enquanto que a letra inicial e as demais letras do identificador devem ser escritas em letra minúscula.

SCREAMING_SNAKE_CASE	forma de grafia de palavras compostas ou frases em que cada palavra (ou sigla) do meio da frase, e a letra inicial do identificador devem começar com letra maiúscula, sem espaços nem pontuação intermediária, enquanto que as demais letras do identificador devem ser escritas em letra minúscula.

UpperCamelCase			forma de grafia de palavras compostas ou frases em que cada palavra (ou sigla) do meio da frase, e a letra inicial do identificador devem começar com letra maiúscula, sem espaços nem pontuação intermediária, enquanto que as demais letras do identificador devem ser escritas em letra minúscula.






Nomes de Identificadores
========================

A grafia dos identificadores deve seguir regras específicas, dependendo do tipo e função que o indicador se refere;

Novos tipos de dados
--------------------

variáveis simples encurtadas			=>	lowerCamelCase, finalizando com "_t"

	typedef volatile uint8_t		reg_t;
	typedef volatile int16_t		vint16_t;

classes									=> UpperCamelCase

	class SomeClass {
		...
	};

enumerações
	-> valores booleanos ou lógicos		=> lowerCamelCase, finalizando com "_t"

	typedef enum logic_t : bool {
		LOGIC_LOW							= 0,
		LOGIC_HIGH							= 1
	} logic_t;

enumerações
	-> listas pequenas e finitas		=> lowerCamelCase, finalizando com "_t"

	typedef enum direction_t : uint8_t {
		DIRECTION_LEFT						= 0,
		DIRECTION_RIGHT						= 1,
		DIRECTION_UP						= 2,
		DIRECTION_DOWN						= 3
	} direction_t;

enumerações
	-> listas grandes ou expansíveis	=> lowerCamelCase, finalizando com "_e"

	typedef enum error_e : uint8_t {
		ERROR_NONE							= 0,  // Success - No errors occurred
		ERROR_LOCKED						= 1,  // Accessed a locked device
		...
	} error_e;

enumerações
	-> flags operadas bit-a-bit			=> lowerCamelCase, finalizando com "_f"

	typedef enum usartError_f : uint8_t {
		USART_ERROR_NONE				= 0,
		USART_ERROR_FRAME				= 1,
		USART_ERROR_PARITY				= 2,
		USART_ERROR_BUFFER_OVERFLOW		= 4
	} usartError_f;

enumerações
	-> listas operadas algebricamente	=> lowerCamelCase, finalizando com "_i"

	typedef enum statesMachine_i : uint8_t {
		STATES_MACHINE_IDLE				= 0,
		STATES_MACHINE_FIRST_STEP		= 1,
		STATES_MACHINE_NEXT_STEP		= 2,
		STATES_MACHINE_ANOTHER_STEP		= 3,
		STATES_MACHINE_LAST_STEP		= 4
	} statesMachine_i;







Nome de tipos de dados simples			=>	lowerCamelCase
	reg_t			someMeaningfullVariableName;

Nome de Objetos								=> lowerCamelCase
	ClassTest	someClassTestObjectName;



Nomes de Instâncias de Estruturas		=> lowerCamelCase
-------------------------------

Devem ser escritos em lowerCamelCase, ou seja, .

Exemplos:
			SomeClass	someSimpleClassObjectName;
			SomeClass	someSimpleClassObjectName;


Camel case (stylized as camelCase or CamelCase; also known as camel caps or more formally as medial capitals). Common examples include "iPhone", "eBay", "FedEx", "DreamWorks", and "HarperCollins". It is also sometimes used in online usernames such as "JohnSmith", and to make multi-word domain names more legible, for example in advertisements.

Some systems prefer camel case with the first letter capitalised, others not.[1][2][3] For clarity, this article calls the two alternatives upper camel case (initial uppercase letter, also known as Pascal case) and lower camel case (initial lowercase letter). Some people and organizations, notably Microsoft,[2] use the term camel case only for lower camel case. Pascal case means only upper camel case.

Camel case is distinct from Title Case, which capitalises all words but retains the spaces between them, and from Tall Man lettering, which uses capitals to emphasize the differences between similar-looking words such as "predniSONE" and "predniSOLONE". Camel case is also distinct from snake case, which uses underscores interspersed with lowercase letters (sometimes with the first letter capitalized).

"The_quick_brown_fox_jumps_over_the_lazy_dog"
Punctuation is removed and spaces are replaced by single underscores. Normally the letters share the same case (e.g. "UPPER_CASE_EMBEDDED_UNDERSCORE" or "lower_case_embedded_underscore") but the case can be mixed, as in OCaml modules.[23]. The style may also be called pothole case, especially in Python programming, in which this convention is often used for naming variables. Illustratively, it may be rendered snake_case, pothole_case, etc. When all-upper-case, it may be referred to as screaming snake case (or SCREAMING_SNAKE_CASE).[24]



Verbs

change		=> Used to alter the valeu of a parameter. Must be used when the
				parameter was already defined in some constructor.

