/* -----------------------------------------------------------------------------
 * Project:			GPDSE AVR8 Library
 * File:			usiTwiSlave.h
 * Module:			USI TWI Slave Controller
 * Author:			Fabio Cabral Pacheco
 *					Hazael dos Santos Batista
 *					Leandro Schwarz
 * Version:			1.0
 * Last edition:	2016-03-02
 * Purpose:			USI (TWI) slave bus controller using the dedicated
 *					peripheral (interrupt-driven)
 * Notes:			This code is heavily based on the Atmel Application Note
 *					AVR312. Unfortunately, the original authorship of the code
 *					is referred as jtyssoe. Please refer him as the main author
 * -------------------------------------------------------------------------- */

#ifndef __USI_TWI_SLAVE_H
#define __USI_TWI_SLAVE_H 10

// -----------------------------------------------------------------------------
// Header files ----------------------------------------------------------------

#include "globalDefines.h"
#if __GLOBALDEFINES_H < 123
	#error Error 100 - The defintion file is outdated (globalDefines must be version 12.3 or greater).
#endif

// -----------------------------------------------------------------------------
// Constant definitions --------------------------------------------------------

#define USI_TWI_SLAVE_GENERAL_CALL_ADDRESS	(0x00)

#define USI_TWI_BUFFER_SIZE					(32)
#define USI_TWI_BUFFER_MASK					(USI_TWI_BUFFER_SIZE - 1)
#if (USI_TWI_BUFFER_SIZE & USI_TWI_BUFFER_MASK)
	#error Error 102 - USI buffer size must be a power of 2
#endif

#ifndef DDR_USI_TWI
	#define DDR_USI_TWI			DDRB
#endif
#ifndef PORT_USI_TWI
	#define PORT_USI_TWI		PORTB
#endif
#ifndef PIN_USI_TWI
	#define PIN_USI_TWI			PINB
#endif
#ifndef PORT_USI_TWI_SDA
	#define PORT_USI_TWI_SDA	PB0
#endif
#ifndef PORT_USI_TWI_SCL
	#define PORT_USI_TWI_SCL	PB2
#endif
#ifndef PIN_USI_TWI_SDA
	#define PIN_USI_TWI_SDA		PB0
#endif
#ifndef PIN_USI_TWI_SCL
	#define PIN_USI_TWI_SCL		PB2
#endif

// -----------------------------------------------------------------------------
// New data types --------------------------------------------------------------

typedef enum usiState_t{
	USI_TWI_SLAVE_CHECK_ADDRESS = 0,
	USI_TWI_SLAVE_SEND_DATA,
	USI_TWI_SLAVE_REQUEST_REPLY_FROM_SEND_DATA,
	USI_TWI_SLAVE_CHECK_REPLY_FROM_SEND_DATA,
	USI_TWI_SLAVE_REQUEST_DATA,
	USI_TWI_SLAVE_GET_DATA_AND_SEND_ACK,
	USI_TWI_SLAVE_STOP_DETECTED
} usiState_t;

typedef volatile unsigned char usiTwiBuffer_t;

// -----------------------------------------------------------------------------
// Public functions declaration ------------------------------------------------

void			usiTwiSlaveInit(unsigned char usiOwnAddress);
usiTwiBuffer_t*	usiTwiGetBuffer();
void			usiTwiSlaveAddFunctionToExecutionList(void (*funct)(volatile unsigned char*), uint16 mask);
void			usiTwiSlaveRunExecutionList();

#endif