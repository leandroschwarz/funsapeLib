
#include <stdint.h>
#include "tftTrace.hpp"
#include "gpdse/globalDefines.hpp"

class Tft
{
public:
	Tft()
	{
		this->initialized_ = true;
		this->width_ = 320;
		this->height_ = 240;
	}

	bool getDisplaySize(uint16_t * wid, uint16_t * hei)
	{
		*wid = this->width_;
		*hei = this->height_;
		return true;
	}

private:
	bool		initialized_			: 1;
	uint16_t	width_;
	uint16_t	height_;
	error_e	lastError_;
};



class TftPlot
{
public:
	TftPlot(Tft * tftHdlr, uint32_t bgColor = 0x000000);
	~TftPlot();

	bool configBorder(uint8_t bdSize = 1, uint32_t bdColor = 0xFFFF00);
	bool configWindowBySize(uint16_t top, uint16_t left, uint16_t width, uint16_t height);
	bool configWindowByPosition(uint16_t top, uint16_t left, uint16_t right, uint16_t bottom);

	error_e getLastError();

	bool setMaxTraces(uint8_t maxTraces);
	bool configTrace(uint8_t index, uint32_t color);

	bool redrawBorder(void);
	bool redrawCanvas(void);
private:
	// TFT display variables
	Tft * tftHandler_;

	// Window variables
	uint16_t	windowPosX0_;
	uint16_t	windowPosX1_;
	uint16_t	windowPosY0_;
	uint16_t	windowPosY1_;

	// Border variables
	uint8_t		borderSize_				: 3;
	uint32_t	borderColor_;

	// Canvas variables
	uint32_t	canvasColor_;
	uint16_t	canvasWidth_;
	uint16_t	canvasHeight_;
	uint16_t	canvasPosX_;
	uint16_t	canvasPosY_;

	// Traces variables
	uint8_t		maxTraces_;
	TftTrace	** trace_;

	// Internal configuration
	bool		changesPending_			: 1;
	bool		initialized_			: 1;
	error_e		lastError_;
protected:
};
