
=============
Pin functions
=============

=> DIO (17)
	-> Data input/output
	-> It is used for serial data input and output. The input data has a low level fluctuation while high level transfer at SCLK. Once one bit is transferred, one ACK is generated at failing edge of the 8th clock inside the chip.
=> CLK (18)
	-> Clock input
	-> It is used for data input and output at rising edge.
=> K1~K2 (19-20)
	-> Data input by keyboard scan
	-> Inputting the pin data here and it will be latched when the display cycle is over.
=> SG1~SG8 (2-9)
	-> Output (segment)
	-> Segment Output (also keyboard scan) and N-channel open drain output
=> GRID6~GRID1 (10-15)
	-> Output (bit)
	-> Bit output and P-channel open drain output

======================
Communication protocol
======================

Communication is held using a special twoâ€“wire bus interface that is NOT COMPATIBLE with TWI or I2C protocols. Each device must have its dedicated bus; connecting more that one device or other I2C compatible devices to the same bus will lead to undesired (and even, catastrophic) behavior.

===================
Communication frame
===================

The communication frame is composed of four elements:
	-> START condition: sent by the microcontroller, by changing DIO from HIGH to LOW, when CLK is HIGH.
	-> STOP condition: sent by the microcontroller, by changing DIO from LOW to HIGH, when CLK is HIGH.
	-> ACK bit: sent by the device after each byte transmission.
	-> COMMAND byte: sent by the microcontroller.
	-> DATA byte: sent by microcontroller during a WRITE operation, or sent by the device during a READ operation.

The ACK bit is generated by the device. The device takes control of the DIO line after the falling edge of the 8th clock, and releases the line at the end of the 9th clock. In the meantime, the devices pulls the line to LOW to signal the ACK.

============
Frame format
============

The frame format depends on the addressing mode in use.
During the auto-increment addressing mode:

START + [COMMAND1] + ACK + STOP +
START + [COMMAND2] + ACK + [DATA1] + ACK + [DATA2] + ACK + ... + [DATAn] + ACK + STOP +
START + [COMMAND3] + ACK + STOP

During the fixed addressing mode:

START + [COMMAND1] + ACK + STOP +
START + [COMMAND2] + ACK + [DATA1] + ACK + STOP +
START + [COMMAND2] + ACK + [DATA2] + ACK + STOP +
... +
START + [COMMAND2] + ACK + [DATAn] + ACK + STOP +
START + [COMMAND3] + ACK + STOP

============
Command byte
============

A command is used to set the display mode and the LED driver status. The first byte after the START CONDITION is interpreted as a command. For clarity purpose, lets separate the command byte into eight bits, numbered 7 to 0, with bit 7 being the first bit sent after the START condition, and bit 0 being the last bit sent before the ACK bit. Bits 7 and 6 are used to determine the command TYPE, bits 5 and 4 must always be 0, and Bits 3 to 0 are the ARGUMENTS, whose function is dependent of the command TYPE.

The command TYPE is given by bits 7 and 6, allowing three commands (command 00 is not allowed):
	-> DATA command				01
	-> CONTROL command			10
	-> ADDRESS command			11

In DATA command, the ARGUMENTS bits have the following function:
	-> Bit 3: Test mode.
		0: Normal mode.
		1: test mode.
	-> Bit 2: Address mode.
		0: auto-increment.
		1: fixed address.
	-> Bit 1: Operation.
		0: write to display.
		1: read from keyboard.
	-> Bit 0: Must always be 0.

In ADDRESS command, the ARGUMENTS bits have the following function:
	-> Bit 3: Must always be 0.
	-> Bit 2~0: Display selection.
		000: display 0.
		001: display 1.
		010: display 2.
		011: display 3.
		100: display 4.
		101: display 5.
		110: not allowed.
		111: not allowed.

In CONTROL command, the ARGUMENTS bits have the following function:
	-> Bit 3: Turns display visibility
		0: Turns display OFF.
		1: Turns display ON.
	-> Bit 2~0: Display contrast.
		000: Duty cycle = 6.25%.
		001: Duty cycle = 13%.
		010: Duty cycle = 26%.
		011: Duty cycle = 62.5%.
		100: Duty cycle = 68.75%.
		101: Duty cycle = 75%.
		110: Duty cycle = 81.25%.
		111: Duty cycle = 87.5%.

=========
Data byte
=========

During a READ operation, the data of the keyboard is transferred by the device to the microcontroller. The DIO line is changed by the device after the LOW to HIGH transition of the CLK line, allowing the device to sample the line at the LOW to HIGH transition of the CLK line.
During a WRITE operation, the data is transferred by the microcontroller to the device. The DIO line must be changed by the microcontroller only when CLK is LOW, allowing the microcontroller to sample the line at the LOW to HIGH transition of the CLK line.






=======================
Reading Key Data Timing
=======================

START + [COMMAND] + ACK + [S0 S1 S2 K1 K2 1 1 1] + ACK + STOP

COMMAND: command to read the keys

The S[0:2] and K[1:2] bit blocks should be logically inverted (H->L, L->H) and positionally inverted (S[2:0] and K[2:1]) in order to allow the code to make some sense (!!!!).

The device changes the DIO line at the HIGH to LOW transition od the CLK line and the microcontroller must read the DIO line at the LOW to HIGH transition of the CLK line. The CLK frequency must be lower than 250 kHz, so the time between each clock transition must be greater than 2us.

KEY		LINES CONNECTED		RAW CODE	BLOCKS		INVERTED	BACKWARDS
1		SG1 and K1			1110_1111	111 01 111	000 10 111	000 01 111
2		SG1 and K2			1111_0111	111 10 111	000 01 111	000 10 111
3		SG5 and K2			1101_0111	110 10 111	001 01 111	100 10 111
4		SG5 and K1			1100_1111	110 01 111	001 10 111	100 01 111
5		SG2 and K1			0110_1111	011 01 111	100 10 111	001 01 111
6		SG2 and K2			0111_0111	011 10 111	100 01 111	001 10 111
7		SG6 and K2			0101_0111	010 10 111	101 01 111	101 10 111
8		SG6 and K1			0100_1111	010 01 111	101 10 111	101 01 111
9		SG3 and K1			1010_1111	101 01 111	010 10 111	010 01 111
10		SG3 and K2			1011_0111	101 10 111	010 01 111	010 10 111
11		SG7 and K2			1001_0111	100 10 111	011 01 111	110 10 111
12		SG7 and K1			1000_1111	100 01 111	011 10 111	110 01 111
13		SG4 and K1			0010_1111	001 01 111	110 10 111	011 01 111
14		SG4 and K2			0011_0111	001 10 111	110 01 111	011 10 111
15		SG8 and K2			0001_0111	000 10 111	111 01 111	111 10 111
16		SG8 and K1			0000_1111	000 01 111	111 10 111	111 01 111

================================================
Write SRAM data in address auto increment 1 mode
================================================
